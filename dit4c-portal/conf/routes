GET     /                                   controllers.MainController.index
POST    /login                              controllers.MainController.login
POST    /logout                             controllers.MainController.logout
GET     /login/oauth/authorize              controllers.OAuthServerController.authorize(client_id: String, redirect_uri: String)
POST    /login/oauth/access_token           controllers.OAuthServerController.accessToken
GET     /authenticate/:provider             controllers.MainController.authenticate(provider)
POST    /authenticate/:provider             controllers.MainController.authenticate(provider)
GET     /clusters                           controllers.MainController.getAvailableClusters
GET     /instances/                         controllers.MainController.getInstances
POST    /instances/                         controllers.MainController.newInstance
GET		/instances/:instanceId/creator		controllers.InstanceController.instanceCreator(instanceId)
PUT     /instances/:instanceId/save         controllers.MainController.saveInstance(instanceId)
PUT     /instances/:instanceId/discard      controllers.MainController.discardInstance(instanceId)
GET     /instances/:instanceId/export       controllers.MainController.exportImage(instanceId)
GET     /instances/:instanceId/pgp-keys		controllers.InstanceController.instancePgpKeys(instanceId)
POST    /instances/:instanceId/share        controllers.MainController.createSharingLink(instanceId)
PUT     /instances/                         controllers.InstanceController.instanceRegistration
PUT     /images/                            controllers.InstanceController.imageRegistration
GET		/pgp-keys/:fingerprint				controllers.KeyRingController.get(fingerprint)
GET     /share/instance/:token              controllers.MainController.redeemSharingLink(token)
GET     /share/clusters/:schedulerId/:data  controllers.AccessPassController.redeemAccessPass(schedulerId, data)

# Image server auth
GET		/services/image-server/auth-http-request/:httpVerb/	          controllers.ImageServerController.authHttpRequest(httpVerb: String, bucketId="")
GET		/services/image-server/auth-http-request/:httpVerb/:bucketId	controllers.ImageServerController.authHttpRequest(httpVerb: String, bucketId: String)

# Assets
GET     /login-background-image             controllers.InjectedContentController.loginBackgroundImage
GET     /login-message.markdown             controllers.InjectedContentController.loginMarkdownMessage
GET     /assets/lib/*file                   controllers.MainController.webjars(path="/public/lib", file)
GET     /assets/*file                       controllers.Assets.versioned(path="/public", file)
GET     /web-components/:name.html          controllers.WebComponentsController.component(name)

# Websocket messaging
POST    /messaging/scheduler                controllers.MessagingController.schedulerRegistration
GET     /messaging/scheduler/:id            controllers.MessagingController.schedulerSocket(id)
GET     /messaging/scheduler/:id/send       controllers.MessagingController.messageToSchedulerForm(id)
POST    /messaging/scheduler/:id/send       controllers.MessagingController.messageToScheduler(id)
