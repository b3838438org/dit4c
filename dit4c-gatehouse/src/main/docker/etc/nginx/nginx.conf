user  nginx;
worker_processes  1;
daemon off;

error_log  /var/log/nginx/error.log;

pid        /run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    client_max_body_size 1G;

    index   index.html index.htm;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
      listen       80;
      server_name  _;

      location / {
        auth_request /auth;
        auth_request_set $upstreamport $upstream_http_x_upstream_port;
        proxy_pass http://172.17.42.1:$upstreamport;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        add_header Cache-Control must-revalidate;
        error_page 403 =200 /forbidden;
        error_page 500 502 =200 /waiting;
      }
    
      location /auth {
        internal;
        proxy_pass http://127.0.0.1:8080/auth;
        proxy_pass_request_body off;
        proxy_set_header Host $host;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
      }

      location /forbidden {
        internal;
        add_header Cache-Control no-cache;
        if ($http_host ~* "^[^\.]+.(.*)*") {
          set $portal $1;
        }
        return 303 $scheme://$portal/login;
      }

      location = /waiting {
        internal;
        if ($http_host ~* "^[^\.]+.(.*)*") {
          set $portal $1;
        }
        proxy_pass $scheme://$portal/waiting;
      }

    }

}
